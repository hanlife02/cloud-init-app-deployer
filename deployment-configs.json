{
  "docker_install_configs": {
    "ubuntu": {
      "display_name": "Ubuntu 20.04/22.04",
      "package_manager": "apt",
      "registry_mirror": "https://mirrors.pku.edu.cn/docker-ce/linux/ubuntu",
      "packages": [
        "apt-transport-https",
        "ca-certificates",
        "curl",
        "gnupg2",
        "software-properties-common"
      ],
      "commands": [
        "mkdir -p /etc/apt/keyrings",
        "curl -fsSL https://mirrors.pku.edu.cn/docker-ce/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg",
        "echo \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.pku.edu.cn/docker-ce/linux/ubuntu $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null",
        "apt-get update",
        "apt-get install -y docker-ce docker-ce-cli containerd.io",
        "systemctl enable docker",
        "systemctl start docker",
        "usermod -aG docker ubuntu",
        "docker --version > /root/docker-version.txt"
      ]
    },
    "centos": {
      "display_name": "CentOS 7/8",
      "package_manager": "yum",
      "registry_mirror": "http://mirrors.pku.edu.cn/repoconfig/docker-ce/",
      "packages": [
        "yum-utils",
        "device-mapper-persistent-data",
        "lvm2"
      ],
      "commands": [
        "wget http://mirrors.pku.edu.cn/repoconfig/docker-ce/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo",
        "yum makecache",
        "yum install -y docker-ce docker-ce-cli containerd.io",
        "systemctl enable docker",
        "systemctl start docker",
        "usermod -aG docker centos",
        "docker --version > /root/docker-version.txt"
      ]
    },
    "debian": {
      "display_name": "Debian 10/11",
      "package_manager": "apt",
      "registry_mirror": "https://mirrors.pku.edu.cn/docker-ce/linux/debian",
      "packages": [
        "apt-transport-https",
        "ca-certificates",
        "curl",
        "gnupg2",
        "software-properties-common"
      ],
      "commands": [
        "apt-get remove -y docker docker-engine docker.io containerd runc || true",
        "apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common",
        "mkdir -p /etc/apt/keyrings",
        "curl -fsSL https://mirrors.pku.edu.cn/docker-ce/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg",
        "echo \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.pku.edu.cn/docker-ce/linux/debian $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null",
        "apt-get update",
        "apt-get install -y docker-ce",
        "systemctl enable docker",
        "systemctl start docker",
        "usermod -aG docker debian",
        "docker --version > /root/docker-version.txt"
      ]
    }
  },
  "image_mapping": {
    "Ubuntu 20.04": "ubuntu",
    "Ubuntu 22.04": "ubuntu",
    "ubuntu-20.04": "ubuntu",
    "ubuntu-22.04": "ubuntu",
    "CentOS 7": "centos",
    "CentOS 8": "centos",
    "centos-7": "centos",
    "centos-8": "centos",
    "Debian 10": "debian",
    "Debian 11": "debian",
    "debian-10": "debian",
    "debian-11": "debian"
  },
  "deployments": {
    "docker": {
      "version": "latest"
    },
    "lobechat": {
      "version": "latest",
      "database_type": "client",
      "packages": ["docker-compose"],
      "commands": [
        "mkdir -p /opt/lobechat",
        "cd /opt/lobechat"
      ],
      "environment": {
        "OPENAI_API_KEY": "sk-xxxx",
        "OPENAI_PROXY_URL": "https://api-proxy.com/v1",
        "ACCESS_CODE": "lobe66"
      },
      "docker_compose": {
        "version": "3.8",
        "services": {
          "lobe-chat": {
            "image": "lobehub/lobe-chat",
            "container_name": "lobe-chat",
            "restart": "always",
            "ports": ["3210:3210"],
            "environment": {
              "OPENAI_API_KEY": "${OPENAI_API_KEY}",
              "OPENAI_PROXY_URL": "${OPENAI_PROXY_URL}",
              "ACCESS_CODE": "${ACCESS_CODE}"
            }
          }
        }
      },
      "auto_update_script": "#!/bin/bash\n# auto-update-lobe-chat.sh\n\n# Set proxy (optional)\nexport https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890\n\n# Pull the latest image and store the output in a variable\noutput=$(docker pull lobehub/lobe-chat:latest 2>&1)\n\n# Check if the pull command was executed successfully\nif [ $? -ne 0 ]; then\n  exit 1\nfi\n\n# Check if the output contains a specific string\necho \"$output\" | grep -q \"Image is up to date for lobehub/lobe-chat:latest\"\n\n# If the image is already up to date, do nothing\nif [ $? -eq 0 ]; then\n  exit 0\nfi\n\necho \"Detected Lobe-Chat update\"\n\n# Remove the old container\necho \"Removed: $(docker rm -f lobe-chat)\"\n\n# You may need to navigate to the directory where `docker-compose.yml` is located first\ncd /opt/lobechat\n\n# Run the new container\necho \"Started: $(docker-compose up -d)\"\n\n# Print the update time and version\necho \"Update time: $(date)\"\necho \"Version: $(docker inspect lobehub/lobe-chat:latest | grep 'org.opencontainers.image.version' | awk -F'\"' '{print $4}')\"\n\n# Clean up unused images\ndocker images | grep 'lobehub/lobe-chat' | grep -v 'lobehub/lobe-chat-database' | grep -v 'latest' | awk '{print $3}' | xargs -r docker rmi > /dev/null 2>&1\necho \"Removed old images.\""
    }
  }
}